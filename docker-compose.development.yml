networks:
  backend:
  frontend:
services:
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - backend
  db_postgresql:
    image: postgres:14.2-alpine
    ports:
      - "5432:5432"
    environment:
      DB_HOST: ${DB_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB_PORT: ${DB_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
  app:
    build:
      context: .
      dockerfile: Dockerfile.development
    tty: true
    volumes:
      - .:/app
      - bundle:/usr/local/bundle
      - ./db:/app/db
    working_dir: /app
    environment:
      REDIS_URL: ${REDIS_URL}
      FORCE_DB_CREATE: ${FORCE_DB_CREATE}
      FORCE_DB_SEED: ${FORCE_DB_SEED}
      APPLICATION_NAME: ${APPLICATION_NAME}
      DB_HOST: ${DB_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB_PORT: ${DB_PORT}
      PORT: ${PORT}
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      JWT_KEY: ${JWT_KEY}
      BUNDLE_GEMFILE: /app/Gemfile
    command: bin/docker-dev-start-web.sh
    networks:
      - backend
      - frontend
    ports:
      - "3000:3000"
    depends_on:
      - redis
      - db_postgresql
volumes:
  bundle:
  postgres_data:
  db-data:
